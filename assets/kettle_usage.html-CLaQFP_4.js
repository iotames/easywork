import{_ as s,c as n,e as a,o as l}from"./app-Br-LFPki.js";const i={};function t(d,e){return l(),n("div",null,[...e[0]||(e[0]=[a(`<h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h2><ol><li>JAVA环境</li><li>Kettle文件夹和环境变量</li><li>资源库配置</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">KETTLE_HOME</span><span class="token operator">=</span>/opt/pentaho/data-integration</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$KETTLE_HOME</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="资源库的配置和使用" tabindex="-1"><a class="header-anchor" href="#资源库的配置和使用"><span>资源库的配置和使用</span></a></h3><p>将图形界面保存的 <code>.kjb/.ktr</code> 文件，存放至统一目录</p><ul><li>首次启动 <code>Spoon</code>，如已有文件资源库，则如下配置：</li></ul><p>点击右上角 <code>​​Connect</code>​​ → ​​​<code>Other Repositories</code>​​ → ​​选择 ​<code>​File Repository</code>​​ → 点击 <code>​​Get Started​​</code> → 输入资源库名称和路径</p><ul><li>已配置好资源库的情况下，可以再添加新资源库：</li></ul><p><code>​​Connect</code> → <code>Repository Manager​​</code> → <code>Add</code> → <code>Other Repositories</code> → ​选择 <code>​​File Repository</code> → <code>​​Get Started​​</code> → 输入资源库名称和路径</p><p>若找不到 <code>Connect</code>​​按钮，请检查 <code>jdk版本</code> 与当前 <code>Kettle版本</code> 是否匹配。如：<code>kettle 9.3</code> 需要使用 <code>jdk11</code></p><ul><li>使用资源库：</li></ul><p>方法一：左上角菜单下有个快捷操作栏，图标从左到右依次是：<code>新建</code>、<code>打开</code>、<code>浏览</code>、<code>保存</code>、<code>另存为</code>。可以直接点击 <code>打开</code> 图标，选择要打开的文件。 方法二：点击左上角菜单 <code>工具</code> → <code>资源库</code> → <code>探索资源库</code> → 点击选项卡 <code>浏览</code> → 双击想要打开的 <code>Jon文件</code> → 双击右下角 <code>Close</code> 按钮。就可看见已经打开了一个Job了。</p><h3 id="数据库连接配置" tabindex="-1"><a class="header-anchor" href="#数据库连接配置"><span>数据库连接配置</span></a></h3><p>在 <code>用户主目录</code> (即Linux的 <code>$HOME</code> 或Windows的 <code>%HOME%</code> )的 <code>.kettle</code> 和 <code>.pentaho</code> 目录。</p><ul><li>密码加密: 执行kettle目录的 <code>Encr.bat</code> (Linux则使用 <code>encr.sh</code>)文件</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"># 得到加密后的密码字符串，复制到.kettle/kettle.properties文件的密码变量中</span>
<span class="line">Encr.bat -kettle 待加密密码字符串</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>变量配置文件: <code>.kettle/kettle.properties</code></li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"># kettle可以直接使用变量代替数据库主机名，用户名，密码等。</span>
<span class="line">pg_local_host=127.0.0.1</span>
<span class="line">pg_local_port=5432</span>
<span class="line">pg_local_dbnm=postgres</span>
<span class="line">pg_local_user=postgres</span>
<span class="line">pg_local_pwd=Encrypted 2be98afc86aa7f2e4bb16bd64d980aac9</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h2><table><thead><tr><th>工具名称</th><th>读取或运行的文件类型</th><th>说明</th></tr></thead><tbody><tr><td>Pan</td><td>.ktr</td><td>命令行执行数据 <code>转换</code></td></tr><tr><td>Kitchen</td><td>.kjb</td><td>命令行执行ETL <code>作业</code>。用于调度和作业流控制</td></tr><tr><td>Spoon CLI</td><td>.ktr/.kjb</td><td>命令行模式<code>执行</code>转换或作业</td></tr><tr><td>Spoon GUI</td><td>.ktr/.kjb</td><td>图形化界面<code>设计</code>转换或作业</td></tr><tr><td>Carte</td><td>无直接执行</td><td>远程服务网关（通过API触发执行）</td></tr><tr><td>Pentaho Chef</td><td>.kjb</td><td>创建/编辑 <code>作业</code>。商业版中的作业编排工具(需额外授权)通过拖拽方式将多个转换（.ktr）组合为复杂作业流</td></tr></tbody></table><h3 id="pan-转换执行​" tabindex="-1"><a class="header-anchor" href="#pan-转换执行​"><span>Pan 转换执行​</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"># 执行基础转换（Pan）</span>
<span class="line"># ./pan.sh -file=/etl/trans/customer_sync.ktr -level=Minimal &gt;&gt; /logs/trans.log</span>
<span class="line">pan.sh -file=/data/etl_jobs/data_clean.ktr -level=Debug &gt;&gt; /var/log/clean.log 2&gt;&amp;1</span>
<span class="line"></span>
<span class="line"># 带参数执行转换（动态过滤数据）</span>
<span class="line">pan.sh -file=/etl/clean_data.ktr \\</span>
<span class="line">       -param:FILTER_DATE=202506 \\</span>
<span class="line">       -level=Debug \\</span>
<span class="line">       &gt;&gt; /var/log/clean_$(date +%Y%m%d).log 2&gt;&amp;1</span>
<span class="line"></span>
<span class="line"># 并行处理（提升性能）</span>
<span class="line">pan.sh -file=/etl/transform.ktr \\</span>
<span class="line">       -nativethreadcount=8 \\</span>
<span class="line">       -var:INPUT_DIR=/data/input</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="​​kitchen-作业调度​" tabindex="-1"><a class="header-anchor" href="#​​kitchen-作业调度​"><span>​​Kitchen 作业调度​</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"># 执行作业流程（Kitchen）</span>
<span class="line"># ./kitchen.sh -file=/etl/jobs/nightly_etl.kjb -level=Error -log=/logs/nightly.log</span>
<span class="line">kitchen.sh -file=/data/etl_jobs/sales_etl.kjb -level=Basic &gt;&gt; /var/log/etl.log 2&gt;&amp;1</span>
<span class="line"></span>
<span class="line"># 执行带错误重试的作业</span>
<span class="line">kitchen.sh -file=/jobs/sync.kjb -retry=3 -retrydelay=60 -level=Basic</span>
<span class="line"></span>
<span class="line"># 轻量级调度</span>
<span class="line">crontab -e</span>
<span class="line"># 添加以下行以每天凌晨2点执行作业</span>
<span class="line">0 2 * * * /opt/kettle/kitchen.sh -file=/etl/jobs/daily.kjb &gt;&gt; /var/log/daily_etl.log 2&gt;&amp;1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="carte-远程服务​" tabindex="-1"><a class="header-anchor" href="#carte-远程服务​"><span>Carte 远程服务​</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"># 启动Carte节点（集群模式）</span>
<span class="line">carte.sh -port=8081 -cluster=prod_cluster -nodeid=node01</span>
<span class="line"></span>
<span class="line"># 通过HTTP API触发作业</span>
<span class="line">curl -X POST &quot;http://carte-server:8081/kitchen?job=/jobs/nightly_sync.kjb&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spoon-cli-自动化调试​" tabindex="-1"><a class="header-anchor" href="#spoon-cli-自动化调试​"><span>Spoon CLI 自动化调试​</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"># 无头模式运行转换（用于CI/CD流水线）</span>
<span class="line">spoon.sh --headless --execute=/etl/data_migration.ktr</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据库驱动" tabindex="-1"><a class="header-anchor" href="#数据库驱动"><span>数据库驱动</span></a></h2><ul><li>数据库驱动目录：Kettle 主程序下的 <code>lib</code> 目录。</li><li>MySQL 驱动：<code>mysql-connector-j-9.2.0.jar</code>。https://downloads.mysql.com/archives/c-j/。下拉框选择：<code>Platform Independent</code> -&gt; 选择 <code>Platform Independent (Architecture Independent), ZIP Archive</code></li></ul><h2 id="配置与监控" tabindex="-1"><a class="header-anchor" href="#配置与监控"><span>配置与监控</span></a></h2><ul><li>资源库配置文件: <code>.kettle/repositories.xml</code>。</li></ul><div class="language-.kettle/repositories.xml line-numbers-mode" data-highlighter="prismjs" data-ext=".kettle/repositories.xml"><pre><code class="language-.kettle/repositories.xml"><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="line">&lt;repositories&gt;</span>
<span class="line">  &lt;repository&gt;    &lt;id&gt;KettleFileRepository&lt;/id&gt;</span>
<span class="line">    &lt;name&gt;santicdc&lt;/name&gt;</span>
<span class="line">    &lt;description&gt;File repository&lt;/description&gt;</span>
<span class="line">    &lt;is_default&gt;true&lt;/is_default&gt;</span>
<span class="line">    &lt;base_directory&gt;C:\\projects\\kettleresp&lt;/base_directory&gt;</span>
<span class="line">    &lt;read_only&gt;N&lt;/read_only&gt;</span>
<span class="line">    &lt;hides_hidden_files&gt;N&lt;/hides_hidden_files&gt;</span>
<span class="line">  &lt;/repository&gt;  &lt;/repositories&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>资源库 vs 文件系统：作业/转换建议保存为文件（.kjb/.ktr），而非数据库资源库——避免连接依赖，更易版本化管理310</li><li>参数化设计：使用 <code>-param:KEY=VALUE</code> 传递动态变量（如日期、环境标识），提升脚本复用率</li><li>内存优化：建议调整 JVM 参数。比如在 <code>pan.sh, kitchen.sh</code> 中设置 <code>JAVA_OPTS=&quot;-Xmx4G&quot;</code> 以支持大数据量处理</li><li>状态监控：返回码≠0时触发告警（如Code 7=转换加载失败）。</li></ol><ul><li>建立ETL监控看板（推荐使用Grafana）</li><li>每周检查磁盘空间和日志文件</li></ul><h3 id="监控告警" tabindex="-1"><a class="header-anchor" href="#监控告警"><span>监控告警</span></a></h3><ul><li>集成Prometheus监控</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"># 执行时添加监控参数</span>
<span class="line">kitchen.sh -file=job.kjb --metrics -metric-port=9090</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 <code>kettle.properties</code> 配置邮件告警</li></ul><div class="language-kettle.properties line-numbers-mode" data-highlighter="prismjs" data-ext="kettle.properties"><pre><code class="language-kettle.properties"><span class="line"># 邮件通知配置</span>
<span class="line">MAIL_HOST=smtp.yourcompany.com</span>
<span class="line">MAIL_PORT=587</span>
<span class="line">MAIL_USER=alert@company.com</span>
<span class="line">MAIL_PASSWORD=*****</span>
<span class="line">MAIL_USE_TLS=true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="日志级别" tabindex="-1"><a class="header-anchor" href="#日志级别"><span>日志级别</span></a></h2><ol><li>没有日志(Nothing):完成没有任何日志输出</li><li>错误日志(Error):只输出错误信息</li><li>最小日志(Minimal)：只输出打开转换、开始执行转换、转换完成和错误信息</li><li>基本日志(Basic)：每一个步骤执行完后输出一条统计信息，默认是基本日志</li><li>详细日志(Detailed)：每一个步骤都会输出开始、结束等信息</li><li>调试(Debug)：每一个步骤都会输出开始、处理、结束等信息，方便调试</li><li>行级日志(非常详细)(Rowlevel)：每处理一行数据都会输出一条信息，会输出大量日志，尽量不要用</li></ol><p>基本日志的输出像这样：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">Merge Join.0 - 完成处理 (I=0, O=0, R=57462, W=362, U=0, E=0)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>I:输入的记录数(不是从上一个步骤读取，是从文件、数据库等地方读取，一般输入控件才有)</li><li>O:输出的记录数(不是输出到下一个步骤，是输出到文件、数据库等，一般输出控件才有)</li><li>R:从前面步聚读取的记录数</li><li>W:向后面步骤输出的记录数</li><li>U:更新的记录数</li><li>E:出错的记录数</li></ul><h2 id="容器化部署" tabindex="-1"><a class="header-anchor" href="#容器化部署"><span>容器化部署</span></a></h2><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker"><pre><code class="language-docker"><span class="line"><span class="token instruction"><span class="token keyword">FROM</span> openjdk:11-jre</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> data-integration /opt/kettle</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">WORKDIR</span> /opt/kettle</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">&quot;kitchen.sh&quot;</span>, <span class="token string">&quot;-file=/jobs/sales_etl.kjb&quot;</span>]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,47)])])}const r=s(i,[["render",t]]),o=JSON.parse('{"path":"/etl/kettle_usage.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1756777846000,"contributors":[{"name":"Hankin","username":"Hankin","email":"hankin@catmes.com","commits":5,"url":"https://github.com/Hankin"}],"changelog":[{"hash":"093bc5b4be1b6fdc60f345afa9c7a7479b631394","time":1756777846000,"email":"554553400@qq.com","author":"Hankin","message":"UPDATE kettle"},{"hash":"9e356678597e5b85eb9c91ec65189a2affa59fa7","time":1749489281000,"email":"hankin@catmes.com","author":"Hankin","message":"update kettle"},{"hash":"66d2cb411d752c17e934702c306875e3a3b39a88","time":1749465392000,"email":"whq78164@gmail.com","author":"Hankin","message":"UPDATE kettle"},{"hash":"dd122c34b3ed4c7c0eea5a931c6af4e579de3bc7","time":1749401044000,"email":"hankin@catmes.com","author":"Hankin","message":"UPDATE kettle"},{"hash":"48b649439b9c25ed4186ba9a4c120eb4b6e5bc18","time":1749394262000,"email":"hankin@catmes.com","author":"Hankin","message":"UPDATE kettle"}]},"filePathRelative":"etl/kettle_usage.md"}');export{r as comp,o as data};
