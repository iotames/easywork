import{_ as n,c as a,e,o as i}from"./app-Br-LFPki.js";const l={};function t(c,s){return i(),a("div",null,[...s[0]||(s[0]=[e(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>Workflow​​ 是GitHub提供的自动化工作流服务。常用于自动化软件构建、测试和部署等流程。</p><p>可以用来搭建持续集成和持续交付 (CI/CD) 平台等功能。</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><ol><li>存储在仓库的 .github/workflows/目录下的 YAML 文件中</li><li>由特定事件触发（如 push、pull request、定时任务等）</li><li>包含一个或多个按顺序或并行执行的作业 (jobs)</li></ol><h2 id="权限" tabindex="-1"><a class="header-anchor" href="#权限"><span>权限</span></a></h2><p><code>Github Pages</code> 的部署，可能需要代码仓库某个分支的写权限。比如 <code>peaceiris/actions-gh-pages</code> 组件，默认使用 <code>gh-pages</code>分支发布静态网页。</p><ol><li>在仓库的 <code>Settings</code> -&gt; <code>Actions</code> -&gt; <code>General</code> -&gt; <code>Workflow permissions</code> 中选择 <code>Read and write permissions</code></li><li>在 <code>xxxx.yml</code> 文件中添加 <code>permissions</code> 权限配置</li></ol><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token comment"># .github/workflows/deploy.yml</span></span>
<span class="line"><span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy to GitHub Pages</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">on</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">push</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">branches</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> master</span>
<span class="line"></span>
<span class="line"><span class="token comment"># jobs 部分之前添加权限配置</span></span>
<span class="line"><span class="token key atrule">permissions</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">contents</span><span class="token punctuation">:</span> write</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">jobs</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">deploy</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span><span class="token number">22.04</span>  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>否则可能发生错误:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">Push the commit or tag</span>
<span class="line">  /usr/bin/git push origin gh-pages</span>
<span class="line">  remote: Permission to xxx/xxxx.git denied to github-actions<span class="token punctuation">[</span>bot<span class="token punctuation">]</span>.</span>
<span class="line">  fatal: unable to access <span class="token string">&#39;https://github.com/xxx/xxxx.git/&#39;</span><span class="token builtin class-name">:</span> The requested URL returned error: <span class="token number">403</span></span>
<span class="line">  Error: Action failed with <span class="token string">&quot;The process &#39;/usr/bin/git&#39; failed with exit code 128&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="action​​" tabindex="-1"><a class="header-anchor" href="#action​​"><span>Action​​：</span></a></h2><p>Action​​ 是工作流中的独立任务单元，是可重用的代码块。</p><ol><li>​预定义 Actions​​：GitHub 市场提供的现成解决方案</li><li>自定义 Actions​​：用户可以自己创建的动作</li><li>三种类型​​：JavaScript Actions、Docker container Actions、Composite Actions</li></ol><h2 id="artifact" tabindex="-1"><a class="header-anchor" href="#artifact"><span>Artifact</span></a></h2><ol><li>GitHub Actions 的 <code>jobs</code> 之间是分布式的，相互独立的。上一个 job 生成的文件，不能直接传到下一个 job 中。</li><li><code>Artifact</code> 用于在不同job之间传递文件：第一个 job 把构建好的文件，传到Artifact上，下一个 job 再从Artifact中下载。</li><li>GitHub 官方的 Action: <code>actions/upload-artifact</code></li></ol><h2 id="本地调试工具-act" tabindex="-1"><a class="header-anchor" href="#本地调试工具-act"><span>本地调试工具: Act</span></a></h2><p><a href="https://github.com/nektos/act" target="_blank" rel="noopener noreferrer">Act源码仓库</a></p><p><a href="https://blog.csdn.net/u011387521/article/details/139952626" target="_blank" rel="noopener noreferrer">使用 Act 本地运行 GitHub Actions</a></p><h3 id="安装act" tabindex="-1"><a class="header-anchor" href="#安装act"><span>安装Act</span></a></h3><ol><li><p>直接下载二进制文件：<a href="https://github.com/nektos/act/releases" target="_blank" rel="noopener noreferrer">https://github.com/nektos/act/releases</a></p></li><li><p>go install 源码安装</p></li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">git clone https://github.com/nektos/act.git</span>
<span class="line">cd act</span>
<span class="line">go install</span>
<span class="line">act --version</span>
<span class="line"></span>
<span class="line"># act version 0.2.68</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用act" tabindex="-1"><a class="header-anchor" href="#使用act"><span>使用Act</span></a></h3><p>输入 <code>act --help</code> 能看帮助内容</p><ul><li><code>-n</code>：Dry run，用于校验语法，查看基本运行逻辑；</li><li><code>-j</code>：直接指定触发 Job；</li><li><code>g</code>：图形化的方式来展示 Action 的流程；</li><li><code>-e</code>：可以编写一个 JSON 文件来描述 Github 事件，例如一个 PR：</li></ul>`,25)])])}const p=n(l,[["render",t]]),r=JSON.parse('{"path":"/devops/workflows/","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1762015024000,"contributors":[{"name":"Hankin","username":"Hankin","email":"554553400@qq.com","commits":2,"url":"https://github.com/Hankin"}],"changelog":[{"hash":"463813e08fc61c8d1edba21aaee1f637af3380c4","time":1762015024000,"email":"hankin@catmes.com","author":"Hankin","message":"UPDATE workflows permissions"},{"hash":"5a998437e0656cdb5314a0e9d60c387e4388f9c8","time":1761893104000,"email":"554553400@qq.com","author":"Hankin","message":"ADD buildexe.md, workflows to devops"}]},"filePathRelative":"devops/workflows/README.md"}');export{p as comp,r as data};
