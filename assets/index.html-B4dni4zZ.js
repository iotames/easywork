import{_ as e,c as n,e as s,o as i}from"./app-D3rUnszu.js";const l={};function c(d,a){return i(),n("div",null,[...a[0]||(a[0]=[s(`<h2 id="相关资源总览" tabindex="-1"><a class="header-anchor" href="#相关资源总览"><span>相关资源总览</span></a></h2><ul><li>官网下载: https://www.oracle.com/java/technologies/downloads/archive/</li><li>JDK8华为云下载：https://repo.huaweicloud.com/java/jdk/8u202-b08/</li><li>JDK17下载：https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html</li><li>JDK19下载：https://www.oracle.com/java/technologies/javase/jdk19-archive-downloads.html</li><li>Java教程： https://dev.java/learn/</li><li>Getting Started with Java：https://dev.java/learn/getting-started/</li><li>下载Maven：https://maven.apache.org/download.cgi</li><li>安装Maven：https://maven.apache.org/install.html</li></ul><p><code>推荐安装JDK8</code>, 主流是JAVA8, 不要安装最新的 <code>JDK17</code>, <code>JDK19</code>(2022-9-30)</p><h2 id="jdk和jre" tabindex="-1"><a class="header-anchor" href="#jdk和jre"><span>JDK和JRE</span></a></h2><ul><li>JDK：Java Development Kit</li><li>JRE：Java Runtime Environment</li></ul><p>JRE是运行Java字节码的虚拟机。但要从Java源码，编译成Java字节码，就需要JDK。 因此，JDK除了包含JRE，还提供了<code>编译器</code>、<code>调试器</code>等开发工具。</p><h2 id="jdk-8u202-jdk-8u211" tabindex="-1"><a class="header-anchor" href="#jdk-8u202-jdk-8u211"><span>JDK 8u202，JDK 8u211</span></a></h2><ul><li>JDK 8u202​​: 发布于 2019 年 1 月。是​​最后一个免费商用版本​​（BCL协议）</li><li>JDK 8u211: 发布于 2019 年 4 月。采用​​OTN协议​​，明确​​禁止生产环境免费使用​。</li></ul><h2 id="openjdk" tabindex="-1"><a class="header-anchor" href="#openjdk"><span>OpenJDK</span></a></h2><p>OpenJDK 和 Oracle JDK（通常简称 JDK）是 Java 开发工具包的两个主流实现，两者在核心功能上高度一致。</p><ul><li>Microsoft Build of OpenJDK: https://learn.microsoft.com/zh-cn/java/openjdk/download</li><li>Eclipse Temurin（原AdoptOpenJDK）:​ https://mirrors.tuna.tsinghua.edu.cn/Adoptium/</li><li>华为云：https://mirrors.huaweicloud.com/openjdk/</li><li>安装OpenJDK: https://openjdk.org/install/</li><li>下载OpenJDK-25: https://jdk.java.net/java-se-ri/25</li></ul><p>生产环境推荐 ​​Eclipse Temurin​​（社区中立）或 ​​Amazon Corretto​​（云服务集成），通过国内镜像加速下载。若需Windows深度优化，可选用Microsoft Build。旧项目迁移时，注意用jdeprscan扫描兼容性</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">wget</span> <span class="token parameter variable">-c</span> https://mirrors.tuna.tsinghua.edu.cn/Adoptium/17/jdk/x64/linux/OpenJDK17U-jdk_x64_linux_hotspot_17.0.16_8.tar.gz</span>
<span class="line"><span class="token function">tar</span> xzf OpenJDK17U-jdk_x64_linux_hotspot_17.0.16_8.tar.gz <span class="token parameter variable">-C</span> /usr/local/</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/local/jdk-17.0.16_8</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token environment constant">$PATH</span></span>
<span class="line"><span class="token comment"># 输出包含 &quot;Eclipse Temurin&quot; 即成功</span></span>
<span class="line"><span class="token function">java</span> <span class="token parameter variable">--version</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装jdk" tabindex="-1"><a class="header-anchor" href="#安装jdk"><span>安装JDK</span></a></h2><p>安装JDK后，设置<code>三个系统环境变量</code>:</p><p>注：最新的官方教程，没把 <code>CLASSPATH</code> 变量设置为必须。1.5后不用再设置classpath，但建议继续设置以保证后兼容。</p><ol><li><code>JAVA_HOME</code>: JDK的安装目录。</li><li><code>PATH</code>: 把<code>JAVA_HOME</code>的<code>bin</code>目录, (还有JRE的bin目录)添加到<code>系统环境变量</code> <code>PATH上</code>。</li><li><code>CLASSPATH</code>: JDK的lib下的<code>tools.jar</code> 和 <code>dt.jar</code>，连同当前路径<code>.</code>，加入<code>CLASSPATH</code>环境变量。</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar   // for Linux</span>
<span class="line">.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;   // for Windows</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>java8</code>: java -version</li><li><code>java9+</code>: java --version</li></ul><h3 id="for-linux" tabindex="-1"><a class="header-anchor" href="#for-linux"><span>FOR LINUX</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">wget -c https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-x64.tar.gz</span>
<span class="line">tar xzf jdk-8u202-linux-x64.tar.gz</span>
<span class="line">sudo mv jdk1.8.0_202 /usr/local/</span>
<span class="line">vi  /etc/profile</span>
<span class="line"></span>
<span class="line">...</span>
<span class="line">export JAVA_HOME=/usr/local/jdk1.8.0_202</span>
<span class="line">export PATH=$PATH:$JAVA_HOME/bin</span>
<span class="line">export CLASSPATH=.:$JAVA_HOME/lib</span>
<span class="line"></span>
<span class="line">source /etc/profile</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="for-windows" tabindex="-1"><a class="header-anchor" href="#for-windows"><span>FOR Windows</span></a></h3><p>一定要设置为<code>系统变量</code>，而不是用户变量，否则无效。</p><ol><li>变量名：<code>JAVA_HOME</code>, 变量值：为你的JDK安装的路径(例: D:\\Java\\jdk1.8.0_202)</li><li>变量名 ：<code>CLASSPATH</code>, 变量值：<code>.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;</code> （前面有个点）</li><li><code>PATH</code>环境变量。新增: <code>%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin</code></li><li>验证: <code>java -version</code>, <code>javac -version</code></li></ol><h2 id="maven项目构建工具" tabindex="-1"><a class="header-anchor" href="#maven项目构建工具"><span>Maven项目构建工具</span></a></h2><p>Maven 是 Java 的项目管理工具，可以对 Java 项目进行自动化的构建和依赖管理。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"># 解压后，添加 bin 目录到 PATH 环境变量中，即可完成安装。</span>
<span class="line">wget -c https://dlcdn.apache.org/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="项目构建命令" tabindex="-1"><a class="header-anchor" href="#项目构建命令"><span>项目构建命令</span></a></h3><ol><li><code>mvn clean</code>: 清理项目，删除 <code>target</code> 目录下的编译输出内容。</li><li><code>mvn compile</code>: 编译项目源代码。</li><li><code>mvn test</code>: 运行项目测试</li><li><code>mvn package</code>: 打包项目到 <code>target</code> 目录下。包括: <code>jar</code>, <code>war</code>, <code>class</code> 文件。</li><li><code>mvn install</code>: 在前面打包项目完成后，复制一份打包成果，到 <code>本地仓库</code>。默认是： <code>~/.m2/repository</code>。</li><li><code>mvn deploy</code>: 将项目打包并部署到远程Maven仓库，适用于发布发布版本。</li></ol><h3 id="常见命令组合" tabindex="-1"><a class="header-anchor" href="#常见命令组合"><span>常见命令组合</span></a></h3><ul><li><code>mvn clean package</code>: 按顺序执行 <code>clean</code> -&gt; <code>complie</code> -&gt; <code>test</code> -&gt; <code>package</code> 三个阶段</li><li><code>mvn clean install</code>: 在 <code>mvn clean package</code> 基础上，新增 <code>install</code> 阶段</li><li><code>mvn clean deploy</code>: 在 <code>mvn clean install</code> 基础上，新增 <code>deploy</code> 阶段</li></ul><p>注：先执行 <code>clean</code>，确保每次构建都是全新的，避免因残留文件导致的问题。</p>`,32)])])}const t=e(l,[["render",c]]),r=JSON.parse('{"path":"/java/","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1760003512000,"contributors":[{"name":"Hankin","username":"Hankin","email":"whq78164@gmail.com","commits":5,"url":"https://github.com/Hankin"}],"changelog":[{"hash":"8035d3518a9ded9d5b678f5c8d994c3dd5259f9c","time":1760003512000,"email":"554553400@qq.com","author":"Hankin","message":"ADD Nexus for repository of mvn"},{"hash":"de8802856a3cb3c952b90c5cd2cccb3ffd0f3fed","time":1754231847000,"email":"hankin@catmes.com","author":"Hankin","message":"UPDATE JAVA for OpenJDK"},{"hash":"c3040525cdf57df2da3df370c8d03a4b6e318b24","time":1750430058000,"email":"hankin@catmes.com","author":"Hankin","message":"UPDATE JAVA"},{"hash":"5898faeda578d18d591dc12a842925a7f45311cc","time":1749831449000,"email":"hankin@catmes.com","author":"Hankin","message":"ADD java env"},{"hash":"6972836d8fd044ebb1b6f05e26a26e07bf38b8a3","time":1748310172000,"email":"whq78164@gmail.com","author":"Hankin","message":"ADD go, java for codelang"}]},"filePathRelative":"java/README.md"}');export{t as comp,r as data};
