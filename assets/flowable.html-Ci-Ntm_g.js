import{_ as n,c as a,e,o as p}from"./app-Br-LFPki.js";const t={};function l(i,s){return p(),a("div",null,[...s[0]||(s[0]=[e(`<h2 id="循环和条件分支任务" tabindex="-1"><a class="header-anchor" href="#循环和条件分支任务"><span>循环和条件分支任务</span></a></h2><ul><li>https://kestra.io/docs/tutorial/flowable</li></ul><p>并行运行任务或子流，创建循环和条件分支。</p><h2 id="条件判断" tabindex="-1"><a class="header-anchor" href="#条件判断"><span>条件判断</span></a></h2><ol><li>根据 beauty 或 notebook 的产品类别输入发出 API 请求。</li><li>判断API响应的结果是否存在商品，然后执行对应的流程。</li></ol><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">id</span><span class="token punctuation">:</span> getting_started</span>
<span class="line"><span class="token key atrule">namespace</span><span class="token punctuation">:</span> company.team</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">inputs</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> category</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> SELECT</span>
<span class="line">    <span class="token key atrule">displayName</span><span class="token punctuation">:</span> Select a category</span>
<span class="line">    <span class="token key atrule">values</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;beauty&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;notebooks&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token key atrule">defaults</span><span class="token punctuation">:</span> <span class="token string">&#39;beauty&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">tasks</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> api</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.http.Request</span>
<span class="line">    <span class="token key atrule">uri</span><span class="token punctuation">:</span> <span class="token string">&quot;https://dummyjson.com/products/category/{{inputs.category}}&quot;</span></span>
<span class="line">    <span class="token key atrule">method</span><span class="token punctuation">:</span> GET</span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> if</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.flow.If</span>
<span class="line">    <span class="token key atrule">condition</span><span class="token punctuation">:</span> <span class="token string">&quot;{{ json(outputs.api.body).products | length &gt; 0 }}&quot;</span></span>
<span class="line">    <span class="token key atrule">then</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> when_true</span>
<span class="line">        <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.log.Log</span>
<span class="line">        <span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token string">&quot;This category has products&quot;</span></span>
<span class="line">    <span class="token key atrule">else</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> when_false</span>
<span class="line">        <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.log.Log</span>
<span class="line">        <span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token string">&quot;The category has no products.&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="循环遍历" tabindex="-1"><a class="header-anchor" href="#循环遍历"><span>循环遍历</span></a></h2><ul><li>https://kestra.io/plugins/core/flow/io.kestra.plugin.core.flow.foreach</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">id</span><span class="token punctuation">:</span> for_loop_example</span>
<span class="line"><span class="token key atrule">namespace</span><span class="token punctuation">:</span> tutorial</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">tasks</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> for_each</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.flow.ForEach</span>
<span class="line">    <span class="token key atrule">concurrencyLimit</span><span class="token punctuation">:</span> <span class="token number">0</span></span>
<span class="line">    <span class="token key atrule">values</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;pynchon&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dostoyevsky&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hedayat&quot;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token key atrule">tasks</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> api</span>
<span class="line">        <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.http.Request</span>
<span class="line">        <span class="token key atrule">uri</span><span class="token punctuation">:</span> <span class="token string">&quot;https://openlibrary.org/search.json?author={{ taskrun.value }}&amp;sort=new&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>values 属性定义迭代列表： 即字符串值列表 <code>[&quot;value1&quot;， &quot;value2&quot;]</code> 或键值对 <code>[{&quot;key&quot;: &quot;value1&quot;}, {&quot;key&quot;: &quot;value2&quot;}]</code> 列表</li><li>tasks 属性定义要迭代执行的任务列表。可以使用 <code>{{ taskrun.value }}</code> 或 <code>{{ parent.taskrun.value }}</code> 变量访问迭代值。</li><li>concurrencyLimit 属性值为 0 ，任务讲并行执行。不填该属性或属性值为1，则任务串行，将按顺序执行。</li></ol><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">id</span><span class="token punctuation">:</span> python_partitions</span>
<span class="line"><span class="token key atrule">namespace</span><span class="token punctuation">:</span> company.team</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">description</span><span class="token punctuation">:</span> Process partitions in parallel</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">tasks</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> getPartitions</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.scripts.python.Script</span>
<span class="line">    <span class="token key atrule">taskRunner</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.scripts.runner.docker.Docker</span>
<span class="line">    <span class="token key atrule">containerImage</span><span class="token punctuation">:</span> ghcr.io/kestra<span class="token punctuation">-</span>io/pydata<span class="token punctuation">:</span>latest</span>
<span class="line">    <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></span>
<span class="line">      from kestra import Kestra</span>
<span class="line">      partitions = [f&quot;file_{nr}.parquet&quot; for nr in range(1, 10)]</span>
<span class="line">      Kestra.outputs({&#39;partitions&#39;: partitions})</span></span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> processPartitions</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.flow.ForEach</span>
<span class="line">    </span>
<span class="line">    <span class="token key atrule">values</span><span class="token punctuation">:</span> <span class="token string">&#39;{{ outputs.getPartitions.vars.partitions }}&#39;</span></span>
<span class="line">    <span class="token key atrule">tasks</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> partition</span>
<span class="line">        <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.scripts.python.Script</span>
<span class="line">        <span class="token key atrule">taskRunner</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.scripts.runner.docker.Docker</span>
<span class="line">        <span class="token key atrule">containerImage</span><span class="token punctuation">:</span> ghcr.io/kestra<span class="token punctuation">-</span>io/pydata<span class="token punctuation">:</span>latest</span>
<span class="line">        <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></span>
<span class="line">          import random</span>
<span class="line">          import time</span>
<span class="line">          from kestra import Kestra</span></span>
<span class="line"></span>
<span class="line">          filename = &#39;<span class="token punctuation">{</span><span class="token punctuation">{</span> taskrun.value <span class="token punctuation">}</span><span class="token punctuation">}</span>&#39;</span>
<span class="line">          print(f&quot;Reading and processing partition <span class="token punctuation">{</span>filename<span class="token punctuation">}</span>&quot;)</span>
<span class="line">          nr_rows = random.randint(1<span class="token punctuation">,</span> 1000)</span>
<span class="line">          processing_time = random.randint(1<span class="token punctuation">,</span> 20)</span>
<span class="line">          time.sleep(processing_time)</span>
<span class="line">          Kestra.counter(&#39;nr_rows&#39;<span class="token punctuation">,</span> nr_rows<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token key atrule">&#39;partition&#39;</span><span class="token punctuation">:</span> filename<span class="token punctuation">}</span>)</span>
<span class="line">          Kestra.timer(&#39;processing_time&#39;<span class="token punctuation">,</span> processing_time<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token key atrule">&#39;partition&#39;</span><span class="token punctuation">:</span> filename<span class="token punctuation">}</span>)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)])])}const o=n(t,[["render",l]]),u=JSON.parse('{"path":"/devops/kestra/flowable.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1762014202000,"contributors":[{"name":"Hankin","username":"Hankin","email":"whq78164@gmail.com","commits":2,"url":"https://github.com/Hankin"}],"changelog":[{"hash":"359aaf83116194b7327c7f3da5d2a7bc17712d15","time":1762014202000,"email":"hankin@catmes.com","author":"Hankin","message":"UPDATE Markdown file content for syntax conflict with Vue template syntax"},{"hash":"cd555a58414909a3498092ad3c0726cc124fa163","time":1751616128000,"email":"whq78164@gmail.com","author":"Hankin","message":"UPDATE kestra"}]},"filePathRelative":"devops/kestra/flowable.md"}');export{o as comp,u as data};
