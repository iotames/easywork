import{_ as s,c as n,e,o as i}from"./app-Br-LFPki.js";const l={};function p(c,a){return i(),n("div",null,[...a[0]||(a[0]=[e(`<h2 id="运行时配置​" tabindex="-1"><a class="header-anchor" href="#运行时配置​"><span>运行时配置​</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> /myapps/yudao-server-2.4.2-SNAPSHOT.jar --spring.config.additional-location<span class="token operator">=</span>file:/myapps/config/application.prod.yml <span class="token operator">&gt;</span> yudaosvr.prod.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span></span>
<span class="line"><span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> /myapps/yudao-server-2.4.2-SNAPSHOT.jar --spring.config.additional-location<span class="token operator">=</span>file:/myapps/config/application.test.yml <span class="token operator">&gt;</span> yudaosvr.test.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span></span>
<span class="line">nginx <span class="token parameter variable">-s</span> reload</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置文件注入-优先级在命令参数和环境变量之后" tabindex="-1"><a class="header-anchor" href="#配置文件注入-优先级在命令参数和环境变量之后"><span>配置文件注入（优先级在命令参数和环境变量之后）</span></a></h3><ol><li><code>工作目录下</code>（执行命令的目录）的​ <code>​config</code> 文件夹里的配置文件​​ ​<code>​优先级最高​</code>。</li><li><code>工作目录下</code>（执行命令的目录）的配置文件 ​<code>​优先级次之​</code>。</li><li>同一目录下，文件格式优先级：<code>.properties</code> &gt; <code>.yml</code> &gt; <code>.yaml</code>。低优先级配置文件的 <code>同名配置</code>，会被覆盖。</li></ol><p>mvn项目的运行时配置文件：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">./config/</span>
<span class="line">  ├── application.properties  # 定义 server.port=8080</span>
<span class="line">  └── application.yml         # 定义 server.port=9090</span>
<span class="line">​​实际生效端口为 8080​​（.properties 覆盖 .yml）。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以 <code>Spring Boot</code> 的 <code>application.properties</code> 配置文件为例：</p><div class="language-application.properties line-numbers-mode" data-highlighter="prismjs" data-ext="application.properties"><pre><code class="language-application.properties"><span class="line">server.port=8080</span>
<span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/db</span>
<span class="line">logging.level.root=INFO</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命令参数显式指定配置文件" tabindex="-1"><a class="header-anchor" href="#命令参数显式指定配置文件"><span>命令参数显式指定配置文件</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 仅加载 /conf/</span></span>
<span class="line"><span class="token function">java</span> <span class="token parameter variable">-jar</span> app.jar <span class="token parameter variable">--spring.config.location</span><span class="token operator">=</span>file:/conf/</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 加载 /conf/ + 默认配置</span></span>
<span class="line"><span class="token function">java</span> <span class="token parameter variable">-jar</span> app.jar --spring.config.additional-location<span class="token operator">=</span>file:/conf/</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定配置文件</span></span>
<span class="line"><span class="token function">java</span> <span class="token parameter variable">-jar</span> app.jar --spring.config.additional-location<span class="token operator">=</span>file:/conf/application.prod.yml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>--spring.config.location</code>: 覆盖默认配置路径；</li><li><code>--spring.config.additional-location</code>: 追加额外路径。</li></ul><p>优先级顺序​​：<code>--spring.config.location</code> &gt; <code>--spring.config.additional-location</code> &gt; <code>默认配置路径</code>​​。</p><h3 id="环境变量注入-优先级仅次命令参数" tabindex="-1"><a class="header-anchor" href="#环境变量注入-优先级仅次命令参数"><span>环境变量注入（优先级仅次命令参数）</span></a></h3><ul><li>更改环境变量后，需重启应用才能生效</li></ul><ol><li>源码编写时获取环境变量</li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 在源码获取环境变量</span></span>
<span class="line"><span class="token class-name">String</span> dbUrl <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">&quot;DB_URL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>运行启动时注入环境变量。如： <code>SPRING_DATASOURCE_URL</code>（点 <code>.</code> 需转为下划线 <code>_</code>）。</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"># 设置环境变量</span>
<span class="line">export DB_URL=jdbc:mysql://prod-db:3306/app</span>
<span class="line"></span>
<span class="line"># 启动应用</span>
<span class="line">java -jar app.jar</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命令参数注入-优先级最高" tabindex="-1"><a class="header-anchor" href="#命令参数注入-优先级最高"><span>命令参数注入（优先级最高）</span></a></h3><ol><li>在源码中读取：Spring Boot 中直接通过 <code>@Value(&quot;\${spring.datasource.url}&quot;)</code> 注入。</li><li>启动时，通过命令参数 <code>--key=value </code> 传入。如：<code>--server.port=8081</code></li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">java -jar app.jar --spring.datasource.url=jdbc:mysql://test-db:3306/app --server.port=8081</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,21)])])}const t=s(l,[["render",p]]),r=JSON.parse('{"path":"/java/conf.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1753070280000,"contributors":[{"name":"Hankin","username":"Hankin","email":"hankin@catmes.com","commits":3,"url":"https://github.com/Hankin"}],"changelog":[{"hash":"6ccd601b03740adb0b45bc3c4c1200f75693ae06","time":1753070280000,"email":"whq78164@gmail.com","author":"Hankin","message":"ADD jwt for JAVA"},{"hash":"71d11bc3c11f4adc906d5fffc4c9ec1ec22d4fbb","time":1750785213000,"email":"hankin@catmes.com","author":"Hankin","message":"UPDATE JAVA, NGINX, nodeJS"},{"hash":"c3040525cdf57df2da3df370c8d03a4b6e318b24","time":1750430058000,"email":"hankin@catmes.com","author":"Hankin","message":"UPDATE JAVA"}]},"filePathRelative":"java/conf.md"}');export{t as comp,r as data};
