import{_ as a,c as n,e,o as l}from"./app-Br-LFPki.js";const i={};function c(t,s){return l(),n("div",null,[...s[0]||(s[0]=[e(`<h2 id="go语言跨平台编译-交叉编译" tabindex="-1"><a class="header-anchor" href="#go语言跨平台编译-交叉编译"><span>Go语言跨平台编译（交叉编译）</span></a></h2><p>Go语言通过临时设置 <code>环境变量</code> 作为编译参数，进行跨平台编译。</p><ul><li>在Windows系统上编译Linux系统的可执行文件：</li></ul><div class="language-bat line-numbers-mode" data-highlighter="prismjs" data-ext="bat"><pre><code class="language-bat"><span class="line">set GOOS=linux</span>
<span class="line">set CGO_ENABLED=0</span>
<span class="line">go build -v -x -ldflags &quot;-s -w&quot; .</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在Linux系统上编译Windows系统的可执行文件：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">GOOS</span><span class="token operator">=</span>windows</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">CGO_ENABLED</span><span class="token operator">=</span><span class="token number">0</span></span>
<span class="line">go build <span class="token parameter variable">-v</span> <span class="token parameter variable">-x</span> <span class="token parameter variable">-ldflags</span> <span class="token string">&quot;-s -w&quot;</span> <span class="token builtin class-name">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="环境变量编译参数" tabindex="-1"><a class="header-anchor" href="#环境变量编译参数"><span>环境变量编译参数</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$CROSS_COMPILE</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">	<span class="token assign-left variable">BUILD_PREFIX</span><span class="token operator">=</span><span class="token string">&quot;CGO_ENABLED=1 \\</span>
<span class="line">CGO_CFLAGS=-I/usr/local/x86_64_gcc/x86_64-pc-linux-gnu/include \\</span>
<span class="line">CGO_LDFLAGS=-L/usr/local/x86_64_gcc/x86_64-pc-linux-gnu/lib \\</span>
<span class="line">GOOS=linux \\</span>
<span class="line">GOARCH=amd64 \\</span>
<span class="line">CC=x86_64-pc-linux-gnu-gcc \\</span>
<span class="line">CXX=x86_64-pc-linux-gnu-g++ \\</span>
<span class="line">AR=x86_64-pc-linux-gnu-ar &quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>CGO_ENABLED：<code>CGO_ENABLED=1</code> 表示开启Cgo支持，用于利用C/C++资源。</li><li>CGO_CFLAGS: 设置头文件路径。<code>-I\${SRCDIR}/include</code> 将XXX库对应头文件所在的目录加入头文件检索路径。用来给c编译器提供开关，比如指定头文件的位置等。</li><li>CGO_LDFLAGS：这只链接库路径。<code>-L\${SRCDIR}/lib</code> 将编译后XXX静态库所在目录加为链接库检索路径。用来指定链接选项，比如链接库的位置，以及使用哪些链接库。</li><li>CC：指定gcc编译命令工具。例：x86_64-pc-linux-gnu-gcc</li><li>GOOS：指定操作系统。例：linux, windows, darwin</li><li>GOARCH：指定系统架构。例：amd64, arm</li></ul><hr><blockquote><p>Go 静态编译机制: https://blog.csdn.net/qq_43580193/article/details/120305231 CGO_ENABLED、GOOS、GOARCH、CC相关参数详解: https://blog.csdn.net/qq_36657175/article/details/124024503 Go语言高级编程-编译和链接参数: https://hypc-pub.github.io/advanced-go-programming-book/ch2-cgo/ch2-10-link.html</p></blockquote>`,11)])])}const o=a(i,[["render",c]]),r=JSON.parse('{"path":"/golang/cross_build.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1754724717000,"contributors":[{"name":"Hankin","username":"Hankin","email":"whq78164@gmail.com","commits":1,"url":"https://github.com/Hankin"}],"changelog":[{"hash":"dac70f5ba3beeaf1041531ed8a40783649c0e458","time":1754724717000,"email":"whq78164@gmail.com","author":"Hankin","message":"ADD cross_build.md: Go语言交叉编译"}]},"filePathRelative":"golang/cross_build.md"}');export{o as comp,r as data};
