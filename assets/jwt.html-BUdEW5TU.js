import{_ as s,c as a,e as p,o as t}from"./app-Br-LFPki.js";const e={};function o(l,n){return t(),a("div",null,[...n[0]||(n[0]=[p(`<h2 id="odoo实现jwt" tabindex="-1"><a class="header-anchor" href="#odoo实现jwt"><span>Odoo实现JWT</span></a></h2><ul><li>第三方包：https://apps.odoo.com/apps/modules/17.0/auth_jwt</li><li>https://github.com/OCA/server-auth</li></ul><h2 id="核心代码" tabindex="-1"><a class="header-anchor" href="#核心代码"><span>核心代码</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token comment"># controllers/main.py</span></span>
<span class="line"><span class="token keyword">import</span> jwt</span>
<span class="line"><span class="token keyword">from</span> odoo <span class="token keyword">import</span> http</span>
<span class="line"><span class="token keyword">from</span> odoo<span class="token punctuation">.</span>http <span class="token keyword">import</span> request</span>
<span class="line"></span>
<span class="line">SECRET_KEY <span class="token operator">=</span> <span class="token string">&quot;YOUR_SECRET_KEY&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">JWTSSOController</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>Controller<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    <span class="token decorator annotation punctuation">@http<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/sso/login&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token string">&#39;public&#39;</span><span class="token punctuation">,</span> csrf<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">sso_login</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> token<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">            payload <span class="token operator">=</span> jwt<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>token<span class="token punctuation">,</span> SECRET_KEY<span class="token punctuation">,</span> algorithms<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;HS256&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">            login <span class="token operator">=</span> payload<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            user <span class="token operator">=</span> request<span class="token punctuation">.</span>env<span class="token punctuation">[</span><span class="token string">&#39;res.users&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sudo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;=&#39;</span><span class="token punctuation">,</span> login<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> limit<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">if</span> user<span class="token punctuation">:</span></span>
<span class="line">                request<span class="token punctuation">.</span>session<span class="token punctuation">.</span>uid <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token builtin">id</span>  <span class="token comment"># 模拟登录</span></span>
<span class="line">                <span class="token comment"># werkzeug.utils.redirect(&#39;/web&#39;)</span></span>
<span class="line">                <span class="token keyword">return</span> http<span class="token punctuation">.</span>redirect_with_hash<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 登录成功后跳转</span></span>
<span class="line">            <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token string">&quot;User not found&quot;</span><span class="token punctuation">,</span> <span class="token number">404</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">except</span> jwt<span class="token punctuation">.</span>ExpiredSignatureError<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token string">&quot;Token expired&quot;</span><span class="token punctuation">,</span> <span class="token number">401</span></span>
<span class="line">        <span class="token keyword">except</span> jwt<span class="token punctuation">.</span>InvalidTokenError<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token string">&quot;Invalid token&quot;</span><span class="token punctuation">,</span> <span class="token number">401</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)])])}const i=s(e,[["render",o]]),u=JSON.parse('{"path":"/python/odoo/jwt.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1754707726000,"contributors":[{"name":"Hankin","username":"Hankin","email":"whq78164@gmail.com","commits":1,"url":"https://github.com/Hankin"}],"changelog":[{"hash":"4f28a7878082934d4f79ca2a6f55622e9c473d36","time":1754707726000,"email":"whq78164@gmail.com","author":"Hankin","message":"UPDATE python jwt, odoo"}]},"filePathRelative":"python/odoo/jwt.md"}');export{i as comp,u as data};
