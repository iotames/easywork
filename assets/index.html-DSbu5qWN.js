import{_ as l,c as t,e as s,a as e,d,b as n,w as c,r as o,o as r}from"./app-D3rUnszu.js";const p={};function h(u,a){const i=o("RouteLink");return r(),t("div",null,[a[3]||(a[3]=s('<h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明"><span>说明</span></a></h2><p>记录软件开发管理工作遇见的问题和解决方案。</p><h2 id="项目管理" tabindex="-1"><a class="header-anchor" href="#项目管理"><span>项目管理</span></a></h2><h3 id="开发资源集中原则" tabindex="-1"><a class="header-anchor" href="#开发资源集中原则"><span>开发资源集中原则</span></a></h3><p>资源有限的情况下，要按数据流转的先后顺序进行开发，从上游到下游。 所有精力和开发资源集中在一处，先完成部分模块功能并进行用户测试，然后再进行下一部分功能模块的开发。 不要同步开发多个功能模块，造成遍地开花的景象，开发资源被分散，最后容易每个都没做好。</p><h3 id="测试角色扮演原则" tabindex="-1"><a class="header-anchor" href="#测试角色扮演原则"><span>测试角色扮演原则</span></a></h3><p>不要用超级管理员的账号进行测试。 要开多个角色和登录用户，代入用户身份，对真实的业务场景进行角色扮演。站在用户的角度去发现问题。</p><h2 id="基础数据" tabindex="-1"><a class="header-anchor" href="#基础数据"><span>基础数据</span></a></h2><h3 id="数据字典的概念" tabindex="-1"><a class="header-anchor" href="#数据字典的概念"><span>数据字典的概念</span></a></h3><ul><li>有效字段简单，不具备字段扩展性。通常仅使用 name, value, code, type 几个字段。</li><li>具备业务扩展性的数据，不放数据字典。</li></ul><h3 id="使用规范" tabindex="-1"><a class="header-anchor" href="#使用规范"><span>使用规范</span></a></h3><ol><li>必须。数据字典的类型和数据，分2张数据表存储。数据类型表，数据值明细表。符合关注点分离原则，高内聚低耦合原则。</li><li>推荐。数据字典的数据，新增字段，用来标记 <code>是否被使用</code>。已被引用的数据，不允许再被修改。</li><li>推荐。数据字典的数据，新增字段，用来标记，<code>被哪些代码文件使用</code>。</li><li>推荐。数据字典专人维护。定期同步数据库和代码文件。初始化数据字典时，从代码写入数据库。</li></ol><ul><li>分类：同一类型的数据，不要放在多个xml文件。1个xml文件，只放1种数据类型的数据字典。</li><li>使用：同一类型的数据，超过50条，不推荐使用数据字典。</li><li>使用：数据具备业务扩展性，字段属性较多，不放数据字典。如：面料成分。</li><li>存放：不确定的数据（基础材料，审批状态等）放在公共模块调用。</li></ul><h2 id="代码提交" tabindex="-1"><a class="header-anchor" href="#代码提交"><span>代码提交</span></a></h2><ol><li>小功能或修复1个BUG做1次提交，同步到远程仓库。不推荐一次性做很多功能，然后保存为一次提交。这样有问题方便回滚。</li><li>代码合并说明：可以若干个提交，合在一起，申请代码合并。</li></ol><p>graph LR 提交MR --&gt; 指定指派人（负责整个合并过程）--&gt; 添加审核者（代码评审）--&gt; 触发审批规则（需核准人批准）--&gt; 合并</p><h2 id="依赖问题" tabindex="-1"><a class="header-anchor" href="#依赖问题"><span>依赖问题</span></a></h2><p>梳理好依赖关系，避免循环依赖。</p><h2 id="数据表字段管理" tabindex="-1"><a class="header-anchor" href="#数据表字段管理"><span>数据表字段管理</span></a></h2><ol><li>未考虑旧数据与新表结构的兼容。</li><li>代码结构与数据表字段不匹配：字段类型有变动，没有新增字段，而是修改原有字段类型。但是引用此字段的队友并不知情，导致严重错误。</li></ol>',20)),e("ul",null,[e("li",null,[d(i,{to:"/devstd/datastruct.html"},{default:c(()=>[...a[0]||(a[0]=[n("数据结构升级",-1)])]),_:1}),a[1]||(a[1]=n("：SQL升级脚本使用说明: 为避免代码合并产生冲突。新版本发布前，sql文件用各自的模块命名，后面再合为一处。",-1))]),a[2]||(a[2]=e("li",null,"开发：删除数据表字段，修改字段类型，必须在统一地方（做个CURD功能的数据列表，实现此需求），提交数据表字段的变动说明。",-1))]),a[4]||(a[4]=s(`<h2 id="配置一致性" tabindex="-1"><a class="header-anchor" href="#配置一致性"><span>配置一致性</span></a></h2><p>本地开发环境，线上开发联调环境，线上测试环境，线上UAT环境，线上生产环境满足以下要求：</p><ol><li>安装的模块保持一致。</li><li>使用 -u 参数启动应用，保证安装的模块同步更新。如某个模块的更新变动，会影响到其他模块，可以及时发现。</li><li>配置文件的关键配置项保持一直。</li><li>个人分支代码，提交合并请求之前，先复制 <code>线上开发联调环境</code> 的数据库到本地，进行初步测试。</li><li>连接 <code>测试环境</code> 或 <code>UAT环境</code> 的数据库的 <code>只读账户</code>，进行初步测试。测试通过后，再提交合并请求。</li></ol><p>维护 <code>env.prod</code> 文件的 <code>ODOO_UPDATE_MODULES</code> 变量。模块按 <code>依赖先后顺序</code> 排列。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">ODOO_UPDATE_MODULES=st_data_dict,st_base_data,st_purchase,st_plm,st_contacts,st_account,st_sales,st_mrp,st_logistics,st_quality</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="版本号和模块分类" tabindex="-1"><a class="header-anchor" href="#版本号和模块分类"><span>版本号和模块分类</span></a></h2><ol><li>提交代码合并时，往上叠加版本号。方便用户测试和BUG反馈。</li></ol><p>小修改，没动数据库表结构。版本号末位+1。改到数据表，倒数第二位+1，末位重置为0</p><ol start="2"><li>模块的分类，添加 <code>&#39;application&#39;: True</code> 配置，并统一以 <code>Santic/</code> 开头，方便筛选。</li></ol><p><code>__manifest__.py</code>文件配置：</p><div class="language-__manifest__.py line-numbers-mode" data-highlighter="prismjs" data-ext="__manifest__.py"><pre><code class="language-__manifest__.py"><span class="line">{</span>
<span class="line">&#39;installable&#39;: True,</span>
<span class="line">&#39;application&#39;: True,</span>
<span class="line">&quot;version&quot;: &quot;17.0.7.1&quot;,</span>
<span class="line">&quot;category&quot;: &#39;Santic/ERP&#39;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11))])}const _=l(p,[["render",h]]),b=JSON.parse('{"path":"/devstd/","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1756967123000,"contributors":[{"name":"Hankin","username":"Hankin","email":"hankin@catmes.com","commits":2,"url":"https://github.com/Hankin"}],"changelog":[{"hash":"5e20aa51120e255bac73383748f2ab23c1ecde39","time":1756967123000,"email":"554553400@qq.com","author":"Hankin","message":"UPDATE devstd: project manage"},{"hash":"e2b842b2a37990c1357604ff4ccffda5514c5e27","time":1751039683000,"email":"hankin@catmes.com","author":"Hankin","message":"ADD devstd"}]},"filePathRelative":"devstd/README.md"}');export{_ as comp,b as data};
