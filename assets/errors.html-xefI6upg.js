import{_ as n,c as a,e,o as l}from"./app-Br-LFPki.js";const p={};function t(i,s){return l(),a("div",null,[...s[0]||(s[0]=[e(`<h2 id="错误和重试" tabindex="-1"><a class="header-anchor" href="#错误和重试"><span>错误和重试</span></a></h2><p>通过自动重试和通知处理错误。</p><ul><li>https://kestra.io/docs/tutorial/errors</li><li>https://kestra.io/docs/workflow-components/errors</li></ul><ol><li>流程级别 ：为特定 <code>流程</code> 或 <code>任务</code> 实施自定义警报。这可以通过添加 errors 任务来实现。</li><li>命名空间级别 ：为给定 <code>命名空间</code> 内任何失败的 Execution 发送通知。</li><li>allowFailure：给指定任务添加 <code>allowFailure: true</code> 属性，允许任务失败，而不会中断整个流程。执行以 WARNING 状态结束。</li></ol><p>作用域：</p><ol><li>errors 可以是子任务列表中，与 <code>子任务列表同级</code> 的错误处理列表。和子任务中的 <code>tasks</code> 同级并列。</li><li>errors 可以是流级别设置的 <code>任务列表</code>。这些任务在发生错误时执行。和 yml流文件中的 <code>tasks</code> 同级并列。</li><li>errors 可以是 <code>命名空间级别</code> 的错误处理列表。</li></ol><h2 id="子任务级别的错误处理" tabindex="-1"><a class="header-anchor" href="#子任务级别的错误处理"><span>子任务级别的错误处理</span></a></h2><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">id</span><span class="token punctuation">:</span> errors</span>
<span class="line"><span class="token key atrule">namespace</span><span class="token punctuation">:</span> company.team</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">tasks</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> parent<span class="token punctuation">-</span>seq</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.flow.Sequential</span>
<span class="line">    <span class="token key atrule">tasks</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> t1</span>
<span class="line">        <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.debug.Return</span>
<span class="line">        <span class="token key atrule">format</span><span class="token punctuation">:</span> <span class="token string">&quot;{{task.id}} &gt; {{taskrun.startDate}}&quot;</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> t2</span>
<span class="line">        <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.flow.Sequential</span>
<span class="line">        <span class="token key atrule">tasks</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> t2<span class="token punctuation">-</span>t1</span>
<span class="line">            <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.execution.Fail</span>
<span class="line">        <span class="token key atrule">errors</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> error<span class="token punctuation">-</span>t1</span>
<span class="line">            <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.debug.Return</span>
<span class="line">            <span class="token key atrule">format</span><span class="token punctuation">:</span> <span class="token string">&quot;Error Trigger ! {{task.id}}&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="流级别的错误处理" tabindex="-1"><a class="header-anchor" href="#流级别的错误处理"><span>流级别的错误处理</span></a></h2><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">id</span><span class="token punctuation">:</span> unreliable_flow</span>
<span class="line"><span class="token key atrule">namespace</span><span class="token punctuation">:</span> company.team</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">tasks</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> fail</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.execution.Fail</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">errors</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> alert_on_failure</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.notifications.slack.SlackIncomingWebhook</span>
<span class="line">    <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">&quot;{{ secret(&#39;SLACK_WEBHOOK&#39;) }}&quot;</span> <span class="token comment"># https://hooks.slack.com/services/xyz/xyz/xyz</span></span>
<span class="line">    <span class="token key atrule">payload</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></span>
<span class="line">      {</span>
<span class="line">        &quot;text&quot;: &quot;Failure alert for flow {{ flow.namespace }}.{{ flow.id }} with ID {{ execution.id }}&quot;</span>
<span class="line">      }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="命名空间级别的错误处理" tabindex="-1"><a class="header-anchor" href="#命名空间级别的错误处理"><span>命名空间级别的错误处理</span></a></h2><p>示例：一旦命名空间 company.team 中的任何流 <code>失败</code> 或 <code>完成并发出警告</code>，它就会自动发送 Slack 警报。</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">id</span><span class="token punctuation">:</span> failure_alert</span>
<span class="line"><span class="token key atrule">namespace</span><span class="token punctuation">:</span> system</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">tasks</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> send</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.notifications.slack.SlackExecution</span>
<span class="line">    <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">&quot;{{ secret(&#39;SLACK_WEBHOOK&#39;) }}&quot;</span></span>
<span class="line">    <span class="token key atrule">channel</span><span class="token punctuation">:</span> <span class="token string">&quot;#general&quot;</span></span>
<span class="line">    <span class="token key atrule">executionId</span><span class="token punctuation">:</span> <span class="token string">&quot;{{trigger.executionId}}&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">triggers</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> listen</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.trigger.Flow</span>
<span class="line">    <span class="token key atrule">conditions</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.condition.ExecutionStatus</span>
<span class="line">        <span class="token key atrule">in</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token punctuation">-</span> FAILED</span>
<span class="line">          <span class="token punctuation">-</span> WARNING</span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.condition.ExecutionNamespace</span>
<span class="line">        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> company.team</span>
<span class="line">        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="重试" tabindex="-1"><a class="header-anchor" href="#重试"><span>重试</span></a></h2><p>针对指定具体任务，添加 <code>retry</code> 属性。</p><ul><li><code>retry</code> 属性的<code>type</code> 配置项，有 <code>constant</code>, <code>exponential</code>, <code>random</code> 三个可选值。</li></ul><ol><li>constant ：每 X 秒/分钟/小时/天重试一次。</li><li>exponential X 秒/分钟/小时/天重试一次，但采用指数退避（即每次重试尝试之间的指数时间间隔）。</li><li>random ：任务将每 X 秒/分钟/小时/天重试一次，并带有随机延迟（即每次重试之间的随机时间间隔）。</li></ol><p>示例：API 调用容易出现暂时性错误。我们将重试任务 5 次(maxAttempt: 5)，最长不超过任务总运行持续时间的 1 分钟(maxDuration: PT1M)，每次重试尝试之间的间隔恒定为 3 秒(interval: PT3S)。</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">id</span><span class="token punctuation">:</span> getting_started</span>
<span class="line"><span class="token key atrule">namespace</span><span class="token punctuation">:</span> company.team</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">tasks</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> api</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> io.kestra.plugin.core.http.Request</span>
<span class="line">    <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//dummyjson.com/products</span>
<span class="line">    <span class="token key atrule">retry</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">type</span><span class="token punctuation">:</span> constant</span>
<span class="line">      <span class="token key atrule">interval</span><span class="token punctuation">:</span> PT3S</span>
<span class="line">      <span class="token key atrule">maxDuration</span><span class="token punctuation">:</span> PT1M</span>
<span class="line">      <span class="token key atrule">maxAttempt</span><span class="token punctuation">:</span> <span class="token number">5</span></span>
<span class="line">      <span class="token key atrule">warningOnRetry</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19)])])}const o=n(p,[["render",t]]),u=JSON.parse('{"path":"/devops/kestra/errors.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1751616128000,"contributors":[{"name":"Hankin","username":"Hankin","email":"whq78164@gmail.com","commits":1,"url":"https://github.com/Hankin"}],"changelog":[{"hash":"cd555a58414909a3498092ad3c0726cc124fa163","time":1751616128000,"email":"whq78164@gmail.com","author":"Hankin","message":"UPDATE kestra"}]},"filePathRelative":"devops/kestra/errors.md"}');export{o as comp,u as data};
