import{_ as t,c as a,e as d,o as n}from"./app-Br-LFPki.js";const s={};function i(r,e){return n(),a("div",null,[...e[0]||(e[0]=[d(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>xxd是个以十六进制的形式，查看文件内容的命令行工具。主要用于将文件（或标准输入）内容以十六进制格式（hex dump）显示，或者将十六进制格式的内容反向转换回原始数据。</p><h2 id="常见使用场景与命令" tabindex="-1"><a class="header-anchor" href="#常见使用场景与命令"><span>常见使用场景与命令</span></a></h2><p>​​用法​​：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 基础用法：以十六进制格式显示文件内容</span></span>
<span class="line">xxd filename</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>场景</th><th>命令示例</th><th>说明</th></tr></thead><tbody><tr><td>查看二进制文件</td><td>xxd filename.bin</td><td>默认格式显示，包含偏移量、十六进制和ASCII。</td></tr><tr><td>生成纯十六进制文本文件 -plain</td><td>xxd -p filename.bin &gt; hexdump.txt</td><td>适用于需要连续十六进制字符串的场景。</td></tr><tr><td>将十六进制文件还原为二进制 -reverse</td><td>xxd -r hexdump.txt output.bin</td><td>还原标准格式（三列）的转储文件。</td></tr><tr><td>将纯十六进制文本文件还原为二进制</td><td>xxd -r -p plain_hex.txt output.bin</td><td>还原连续的十六进制字符串（无偏移量和ASCII码）。</td></tr><tr><td>从文件指定位置开始查看 -seek</td><td>xxd -s 0x100 filename.bin</td><td>从文件偏移256字节（0x100）处开始显示。</td></tr><tr><td>限制查看的长度 -len</td><td>xxd -l 64 filename.bin</td><td>只显示文件的前64个字节。</td></tr><tr><td>更改每行显示的字节数 -cols</td><td>xxd -c 8 filename.bin</td><td>每行显示8字节十六进制内容。</td></tr></tbody></table><p><code>默认</code>每行显示16字节：16进制字符，每字节2个，每组2个字节4个16进制字符。共8组。如下所示：</p><div class="language-h line-numbers-mode" data-highlighter="prismjs" data-ext="h"><pre><code class="language-h"><span class="line">000002c0: 0000 0000 4000 40c0 2e74 6c73 0000 0000  ....@.@..tls....</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="参数说明" tabindex="-1"><a class="header-anchor" href="#参数说明"><span>参数说明</span></a></h2><p>短参数 英文全称/描述 功能解释</p><p>-r -reverse 反向操作：将十六进制转储转换回二进制文件。</p><p>-p -plain 或 -postscript 纯十六进制输出：生成连续的十六进制字符串，不显示偏移量和ASCII码。</p><p>-c -cols 设置每行显示的列数（字节数）。默认16字节。</p><p>-l -len 限制输出或转换的长度（字节数）。</p><p>-s -seek 从指定的偏移量开始处理文件。</p><p>-g -groupsize 设置分组大小：每多少个字节为一组，用空格隔开。默认2字节。</p><p>-a -autoskip 自动跳过全为零的行，用单个*代替。</p><p>-u -uppercase 十六进制字母使用大写形式。</p><p>-i -include 以C语言头文件格式输出。</p>`,19)])])}const p=t(s,[["render",i]]),c=JSON.parse('{"path":"/clang/xxd.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761808872000,"contributors":[{"name":"Hankin","username":"Hankin","email":"554553400@qq.com","commits":1,"url":"https://github.com/Hankin"}],"changelog":[{"hash":"3038e1cba7e1ade71ab4ac2dd7d94cb010c7d479","time":1761808872000,"email":"554553400@qq.com","author":"Hankin","message":"ADD xxd.md"}]},"filePathRelative":"clang/xxd.md"}');export{p as comp,c as data};
