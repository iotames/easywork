import{_ as a,c as n,e,o as l}from"./app-Br-LFPki.js";const p={};function i(c,s){return l(),n("div",null,[...s[0]||(s[0]=[e(`<h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h2><ul><li><p>官方文档：https://docs.sonarsource.com/sonarqube/latest/</p></li><li><p><code>10.8</code> 版本推荐 <code>Java version 17</code></p></li></ul><h3 id="系统参数调整" tabindex="-1"><a class="header-anchor" href="#系统参数调整"><span>系统参数调整</span></a></h3><p>查看当前参数值：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">sysctl</span> vm.max_map_count</span>
<span class="line"><span class="token function">sysctl</span> fs.file-max</span>
<span class="line"><span class="token builtin class-name">ulimit</span> <span class="token parameter variable">-n</span></span>
<span class="line"><span class="token builtin class-name">ulimit</span> <span class="token parameter variable">-u</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改参数值（root权限修改）：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">sysctl</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">vm.max_map_count</span><span class="token operator">=</span><span class="token number">524288</span></span>
<span class="line"><span class="token function">sysctl</span> <span class="token parameter variable">-w</span> fs.file-max<span class="token operator">=</span><span class="token number">131072</span></span>
<span class="line"><span class="token builtin class-name">ulimit</span> <span class="token parameter variable">-n</span> <span class="token number">131072</span></span>
<span class="line"><span class="token builtin class-name">ulimit</span> <span class="token parameter variable">-u</span> <span class="token number">8192</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="postgres数据库准备" tabindex="-1"><a class="header-anchor" href="#postgres数据库准备"><span>Postgres数据库准备</span></a></h2><ol><li>启动Postgres容器</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--name</span> postgres  <span class="token parameter variable">--privileged</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-v</span> /etc/localtime:/etc/localtime:ro <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">POSTGRES_USER</span><span class="token operator">=</span>postgresql <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">POSTGRES_PASSWORD</span><span class="token operator">=</span>Abcd1234 <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">POSTGRES_DB</span><span class="token operator">=</span>sonarqube <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-p</span> <span class="token number">5432</span>:5432 <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-v</span> /data/postgres/postgresql:/var/lib/postgresql <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">TZ</span><span class="token operator">=</span>Asia/Shanghai <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">--restart</span> always <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-d</span> postgres:17</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>创建sonar用户和数据库</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 进入postgres数据库容器</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> postgres <span class="token function">bash</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 切换到postgres用户</span></span>
<span class="line"><span class="token function">su</span> postgres</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 进入postgres命令交互界面</span></span>
<span class="line">psql</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看所有数据库账号</span></span>
<span class="line"><span class="token punctuation">\\</span>du</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建新账号和数据库</span></span>
<span class="line">create user sonar with password <span class="token string">&#39;sonar&#39;</span> Superuser<span class="token punctuation">;</span></span>
<span class="line">create database sonar owner sonar<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看当前所有数据库</span></span>
<span class="line"><span class="token punctuation">\\</span>l</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动sonarqube代码检测平台" tabindex="-1"><a class="header-anchor" href="#启动sonarqube代码检测平台"><span>启动SonarQube代码检测平台</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># docker pull sonarqube:9.9-community</span></span>
<span class="line"><span class="token function">docker</span> pull sonarqube:lts-community</span>
<span class="line"></span>
<span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/sonarqube/<span class="token punctuation">{</span>data,extensions,logs,datasql,conf<span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建 <code>sonarstart.sh</code> 启动脚本：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在当前Sell环境，使用.和source命令，从某个文件导出环境变量</span></span>
<span class="line"><span class="token comment"># .命令是POSIX标准命令，兼容性更广</span></span>
<span class="line"><span class="token comment"># 环境变量文件，使用相对路径，会找不到。env.sample: file not found</span></span>
<span class="line"><span class="token assign-left variable">ENV_FILE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/.env</span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$ENV_FILE</span></span>
<span class="line"><span class="token builtin class-name">.</span> <span class="token variable">$ENV_FILE</span></span>
<span class="line"></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">--name</span> sonarqube <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">--net</span> <span class="token function">host</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-p</span> <span class="token number">9000</span>:9000 <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">SONAR_JDBC_URL</span><span class="token operator">=</span>jdbc:postgresql://127.0.0.1:5432/sonar  <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">SONAR_JDBC_USERNAME</span><span class="token operator">=</span>sonar <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">SONAR_JDBC_PASSWORD</span><span class="token operator">=</span>sonar <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-v</span> /data/sonarqube/data:/opt/sonarqube/data <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-v</span> /data/sonarqube/extensions:/opt/sonarqube/extensions <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-v</span> /data/sonarqube/logs:/opt/sonarqube/logs <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-v</span> /data/sonarqube/datasql:/var/lib/postgresql/data <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-v</span> /data/sonarqube/conf:/opt/sonarqube/conf <span class="token punctuation">\\</span></span>
<span class="line">sonarqube:lts-community <span class="token operator">||</span> <span class="token function">docker</span> start sonarqube</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>登录直接访问http://[ip地址]:9000，首次进入，默认账号密码为 <code>admin/admin</code></p><h2 id="错误异常" tabindex="-1"><a class="header-anchor" href="#错误异常"><span>错误异常</span></a></h2><p>如 <code>sonarqube</code> 容器启动报错：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">ERROR: <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> bootstrap checks failed. You must address the points described <span class="token keyword">in</span> the following <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> lines before starting Elasticsearch.</span>
<span class="line">bootstrap check failure <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> of <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: max virtual memory areas vm.max_map_count <span class="token punctuation">[</span><span class="token number">65530</span><span class="token punctuation">]</span> is too low, increase to at least <span class="token punctuation">[</span><span class="token number">262144</span><span class="token punctuation">]</span></span>
<span class="line">ERROR: Elasticsearch did not <span class="token builtin class-name">exit</span> normally - check the logs at /opt/sonarqube/logs/sonarqube.log</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个错误是由于 Elasticsearch 在启动时进行了 bootstrap 检查，发现 <code>vm.max_map_count</code> 的值太低，无法正常启动。 编辑 <code>/etc/sysctl.conf</code> 文件：</p><div class="language-conf line-numbers-mode" data-highlighter="prismjs" data-ext="conf"><pre><code class="language-conf"><span class="line"># 在文件末尾添加以下行：</span>
<span class="line">vm.max_map_count=262144</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>保存后，运行命令 <code>sudo sysctl -p</code> 使更改生效。</p><h2 id="中文插件" tabindex="-1"><a class="header-anchor" href="#中文插件"><span>中文插件</span></a></h2><p>在github上找对应的版本: https://github.com/xuhuisheng/sonar-l10n-zh/releases</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment">#进容器下载中文插件</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> sonarqube <span class="token function">bash</span></span>
<span class="line"><span class="token builtin class-name">cd</span> /opt/sonarqube/extensions/downloads</span>
<span class="line"></span>
<span class="line"><span class="token comment">#中文插件</span></span>
<span class="line"><span class="token function">wget</span> https://github.com/xuhuisheng/sonar-l10n-zh/releases/download/sonar-l10n-zh-plugin-9.9/sonar-l10n-zh-plugin-9.9.jar</span>
<span class="line"></span>
<span class="line"><span class="token comment">#pmd规则</span></span>
<span class="line"><span class="token function">wget</span> https://github.com/rhinoceros/sonar-p3c-pmd/releases/download/pmd-3.2.0-beta-with-p3c1.3.6-pmd6.10.0/sonar-pmd-plugin-3.2.0-SNAPSHOT.jar</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 重启sonar qube</span></span>
<span class="line"><span class="token function">docker</span> restart sonarqube </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启后再次打开页面，会提示插件风险，点击&quot;我了解风险&quot; 即可</p><h2 id="手动测试" tabindex="-1"><a class="header-anchor" href="#手动测试"><span>手动测试</span></a></h2><h3 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h3><ol><li><p>点击左上角菜单 <code>项目</code>，点击右上角 <code>新增项目</code> -&gt; <code>手工</code>，填写：显示名，项目标识，主分支名</p></li><li><p>保存项目后，在当前项目页下方，点击 <code>本地</code>，选择 <code>创建项目令牌</code>。 填写： 令牌名称，过期时间。点击旁边的 <code>创建</code> 按钮。</p></li><li><p>分析项目：在 <code>使用什么构建技术？</code> 下方选择 <code>其他</code> 选项卡。在 <code>使用哪种操作系统？</code> 下方选择 <code>Linux</code> 选项卡</p></li><li><p>按照指引，下载Linux平台的 <code>sonar scan</code> 扫描器，并执行扫描。</p></li></ol><h3 id="使用docker容器调用sonar-scan" tabindex="-1"><a class="header-anchor" href="#使用docker容器调用sonar-scan"><span>使用Docker容器调用sonar scan</span></a></h3><ul><li><code>-Dsonar.projectKey</code>=后面加上在sonar新建的项目名称</li><li><code>SONAR_LOGIN</code>=填写对应项目的令牌</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> run <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--rm</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-e</span> <span class="token assign-left variable">SONAR_HOST_URL</span><span class="token operator">=</span><span class="token string">&quot;http://[IP地址]:9000&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-e</span> <span class="token assign-left variable">SONAR_SCANNER_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-Dsonar.projectKey=test&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-e</span> <span class="token assign-left variable">SONAR_LOGIN</span><span class="token operator">=</span><span class="token string">&quot;sqp_3bade8887e2812d2b204c840000000000&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-v</span> <span class="token string">&quot;需要扫描的代码文件夹目录:/usr/src&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    sonarsource/sonar-scanner-cli:latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>扫描完毕后，可以在web界面上查看到对应的扫描结果</p><h2 id="执行代码检查" tabindex="-1"><a class="header-anchor" href="#执行代码检查"><span>执行代码检查</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">--net</span> <span class="token function">host</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">SONAR_SCANNER_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-Dsonar.projectKey=yourcode -Dsonar.sources=/usr/src -Dsonar.host.url=http://127.0.0.1:9000 -Dsonar.login=sqp_311136f0b4ca84873ad17297745bdbee84a5919f&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-v</span> <span class="token string">&quot;/projects/yourcode:/usr/src&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">sonarsource/sonar-scanner-cli:11.1.1.1661_6.2.1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><blockquote><p>docker SonarQube安装 https://blog.csdn.net/Sari_liu/article/details/140344316</p></blockquote><blockquote><p>SonarQube 安装及使用 https://www.cnblogs.com/machangwei-8/p/18375840</p></blockquote>`,39)])])}const o=a(p,[["render",i]]),r=JSON.parse('{"path":"/devops/sonarqube.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1753112288000,"contributors":[{"name":"Hankin","username":"Hankin","email":"hankin@catmes.com","commits":1,"url":"https://github.com/Hankin"}],"changelog":[{"hash":"547df6a221b4ca52dbc92df404e0ba495613eb14","time":1753112288000,"email":"hankin@catmes.com","author":"Hankin","message":"ADD SonarQube for DevOPS"}]},"filePathRelative":"devops/sonarqube.md"}');export{o as comp,r as data};
